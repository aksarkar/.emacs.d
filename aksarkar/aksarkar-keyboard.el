(require 'misc)
(require 'expand-region)

(defun aksarkar-save-buffer-and-swap (arg)
  (interactive "P")
  (if (derived-mode-p 'prog-mode 'text-mode)
    (basic-save-buffer))
  (switch-to-buffer nil)
  (if (and arg
           (derived-mode-p 'comint-mode))
      (comint-previous-input 0)))

(defun aksarkar/completion-in-region (start end collection &optional predicate)
  (with-wrapper-hook
      completion-in-region-functions (start end collection predicate)
    (let ((minibuffer-completion-table collection)
          (minibuffer-completion-predicate predicate))
      (ivy-completing-read "Completion:" collection predicate))))

(global-set-key "\C-s" 'isearch-forward-regexp)
(global-set-key "\C-x\C-b" 'ibuffer)
(global-set-key "\C-xk" 'kill-this-buffer)
(global-set-key "\C-z" 'undo)
(global-set-key "\M-%" 'query-replace-regexp)
(global-set-key "\M-&" 'replace-regexp)
(global-set-key "\M-h" 'er/expand-region)
(global-set-key "\M-z" 'zap-up-to-char)
(global-set-key (kbd "C-M-`") '(lambda () (interactive) (exchange-point-and-mark t)))
(global-set-key (kbd "H-i") 'hippie-expand)
(global-set-key (kbd "C-`") '(lambda () (interactive) (push-mark)))
(global-set-key (kbd "H-b") 'bibtex-convert-alien)
(global-set-key (kbd "H-d") 'aksarkar-day)
(global-set-key (kbd "H-e") 'eshell)
(global-set-key (kbd "H-f") 'find-file-at-point)
(global-set-key (kbd "H-m") 'magit-status)
(global-set-key (kbd "H-n") 'aksarkar-night)
(global-set-key (kbd "H-q") 'previous-buffer)
(global-set-key (kbd "H-r") 'elfeed)
(global-set-key (kbd "H-s") 'shell)
(global-set-key (kbd "H-t") '(lambda () (interactive) (eshell 2)))
(global-set-key (kbd "H-w") 'next-buffer)
(global-set-key (kbd "M-`") '(lambda () (interactive) (set-mark-command t)))
(global-set-key (kbd "<f2>") 'aksarkar-save-buffer-and-swap)

(provide 'aksarkar-keyboard)
